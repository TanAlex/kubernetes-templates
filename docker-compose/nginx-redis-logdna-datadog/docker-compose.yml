version: "3.7"
services:
  nginx:
    restart: unless-stopped
    image: nginx:stable
    container_name: formio-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  formio-files-core:
    restart: unless-stopped
    image: formio/formio-files-core:2.68.0
    container_name: formio-files-core
    environment:
      - FORMIO_SERVER=${FORMIO_SERVER}
      - FORMIO_PROJECT=${FORMIO_PROJECT}
      - FORMIO_PROJECT_TOKEN=${FORMIO_PROJECT_TOKEN}
      - FORMIO_PDF_PROJECT=${FORMIO_PDF_PROJECT}
      - FORMIO_PDF_APIKEY=${FORMIO_PDF_APIKEY}
      - FORMIO_S3_BUCKET=${FORMIO_S3_BUCKET}
      - FORMIO_S3_REGION=${FORMIO_S3_REGION}
      - FORMIO_S3_KEY=${FORMIO_S3_KEY}
      - FORMIO_S3_SECRET=${FORMIO_S3_SECRET}
    ports:
      - "4005:4005"
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    restart: unless-stopped
    image: redis
    container_name: redis
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  formio-server:
    restart: unless-stopped
    image: formio/formio-enterprise:6.6.1
    container_name: formio-server
    ports:
      - "3000:80"
    environment:
      - DEBUG=${DEBUG}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      - ADMIN_PASS=${ADMIN_PASS}
      - PRIMARY=${PRIMARY}
      - LICENSE=${LICENSE}
      - FORMIO_FILES_SERVER=${FORMIO_FILES_SERVER}
      - DB_SECRET=${DB_SECRET}
      - JWT_SECRET=${JWT_SECRET}
      - MONGO=${MONGO}
      - PORTAL_SECRET=${PORTAL_SECRET}
      - PROTOCOL=${PROTOCOL}
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  datadog:
    image: datadog/agent:latest
    container_name: datadog
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /proc/:/host/proc/:ro
      - /sys/fs/cgroup:/host/sys/fs/cgroup:ro
      - ./volumes/datadog/datadog.yaml:/etc/datadog-agent/datadog.yaml
    environment:
      - DD_API_KEY=${DD_API_KEY}
    logging:
      options:
        max-size: "10m"
        max-file: "3"

  logdna:
    image: logdna/logspout:latest
    container_name: logdna
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
    - HOSTNAME=${CUSTOM_HOSTNAME}
    - FILTER_NAME=${FILTER_NAME}
    - TAGS=${TAGS}
    - LOGDNA_KEY=${LOGDNA_KEY}
    logging:
      options:
        max-size: "10m"
        max-file: "3"
